{"version":3,"sources":["components/app.jsx","components/square.jsx","components/grid.jsx","components/menu.jsx","components/pathFind.jsx","serviceWorker.js","index.js"],"names":["Square","setStyle","square","style","val","className","this","props","onClick","gOnClick","row","col","Component","Grid","state","setGrid","map","r","c","aOnClick","Menu","startSearch","type","name","value","checked","activeOption","onChange","changeEvent","optionChange","target","clrObs","rstBrd","PathFind","BFS","sRow","sCol","console","log","tempGrid","Array","fill","_","j","k","d","visited","node","newList","start","push","length","pop","initialGrid","App","selectedOption","startRow","startCol","endRow","endCol","currentGrid","handleOptionChange","setState","handleClearObs","handleResetBoard","handleClick","i","handleSearch","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cb02adf2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Grid from \"./grid\";\nimport Menu from \"./menu\";\nimport PathFind from \"./pathFind\";\nconst sR = 9;\nconst sC = 3;\nconst eR = 9;\nconst eC = 16;\n\nlet initialGrid = Array(20)\n  .fill()\n  .map((_) => Array(20).fill(\"\"));\n\nfor (let j = 0; j < 20; j++) {\n  for (let k = 0; k < 20; k++) {\n    initialGrid[j][k] = { r: j, c: k, val: \"0\" };\n  }\n}\n\ninitialGrid[sR][sC].val = \"1\";\ninitialGrid[eR][eC].val = \"2\";\n\nclass App extends Component {\n  state = {\n    selectedOption: \"-1\",\n    startRow: sR,\n    startCol: sC,\n    endRow: eR,\n    endCol: eC,\n    currentGrid: initialGrid,\n  };\n\n  handleOptionChange = (value) => {\n    this.setState({\n      selectedOption: value,\n    });\n  };\n  handleClearObs = () => {\n    let tempGrid = Array(20)\n      .fill()\n      .map((_) => Array(20).fill(\"\"));\n\n    for (let j = 0; j < 20; j++) {\n      for (let k = 0; k < 20; k++) {\n        tempGrid[j][k] = { r: j, c: k, val: \"0\" };\n      }\n    }\n\n    tempGrid[this.state.startRow][this.state.startCol].val = \"1\";\n    tempGrid[this.state.endRow][this.state.endCol].val = \"2\";\n    this.setState({ currentGrid: tempGrid });\n\n    return;\n  };\n\n  handleResetBoard = () => {\n    let tempGrid = Array(20)\n      .fill()\n      .map((_) => Array(20).fill(\"\"));\n\n    for (let j = 0; j < 20; j++) {\n      for (let k = 0; k < 20; k++) {\n        tempGrid[j][k] = { r: j, c: k, val: \"0\" };\n      }\n    }\n    this.setState({ startRow: sR, startCol: sC, endRow: eR, endCol: eC });\n    tempGrid[sR][sC].val = \"1\";\n    tempGrid[eR][eC].val = \"2\";\n\n    this.setState({ currentGrid: tempGrid });\n\n    return;\n  };\n  handleClick = (row, col) => {\n    let tempGrid = this.state.currentGrid;\n    let i = this.state.selectedOption;\n    //setting start and end\n    if (i === \"1\" || i === \"2\") {\n      if (\n        (this.state.startRow === row && this.state.startCol === col) ||\n        (this.state.endRow === row && this.state.endCol === col)\n      ) {\n        return;\n      } else {\n      }\n      if (i === \"1\") {\n        tempGrid[this.state.startRow][this.state.startCol].val = \"0\";\n        tempGrid[row][col].val = \"1\";\n        this.setState({ startRow: row, startCol: col });\n      } else {\n        tempGrid[this.state.endRow][this.state.endCol].val = \"0\";\n        tempGrid[row][col].val = \"2\";\n        this.setState({ endRow: row, endCol: col });\n      }\n    }\n\n    //setting obstacles\n    else {\n      if (i === \"3\") {\n        if (\n          (this.state.startRow === row && this.state.startCol === col) ||\n          (this.state.endRow === row && this.state.endCol === col)\n        ) {\n          return;\n        } else {\n          tempGrid[row][col].val = tempGrid[row][col].val === \"0\" ? \"3\" : \"0\";\n        }\n      }\n    }\n\n    this.setState({ currentGrid: tempGrid });\n    return;\n  };\n  handleSearch = () => {\n    console.log(\"reached handle\");\n    let path = new PathFind();\n    console.log(\n      path.BFS(this.state.startCol, this.state.endCol, this.state.currentGrid)\n    );\n  };\n  render() {\n    return (\n      <div>\n        <Menu\n          optionChange={this.handleOptionChange}\n          activeOption={this.state.selectedOption}\n          clrObs={this.handleClearObs}\n          rstBrd={this.handleResetBoard}\n          startSearch={this.handleSearch}\n        />\n\n        <Grid setGrid={this.state.currentGrid} aOnClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\n\nclass Square extends Component {\n  render() {\n    return (\n      <button\n        className={this.setStyle(this.props.square)}\n        onClick={() => this.props.gOnClick(this.props.row, this.props.col)}\n      ></button>\n    );\n    console.log(this.props.row, this.props.col);\n  }\n  //0empty, 1start, 2end, 3obs\n  setStyle = (square) => {\n    let style = \"sq btn m-0 rounded-0 btn-\";\n    style +=\n      square.val === \"1\"\n        ? \"success\"\n        : square.val === \"2\"\n        ? \"danger\"\n        : square.val === \"0\"\n        ? \"light\"\n        : \"secondary\";\n    return style;\n  };\n}\n\nexport default Square;\n","import React, { Component } from \"react\";\nimport Square from \"./square\";\n\nclass Grid extends Component {\n  state = {};\n\n  render() {\n    return (\n      <span className=\"grid\">\n        {this.props.setGrid.map((row) => (\n          <div>\n            {row.map((square) => (\n              <Square\n                square={square}\n                row={square.r}\n                col={square.c}\n                gOnClick={this.props.aOnClick}\n              ></Square>\n            ))}\n          </div>\n        ))}\n      </span>\n    );\n  }\n}\n\nexport default Grid;\n","import React, { Component } from \"react\";\n\nclass Menu extends Component {\n  render() {\n    return (\n      <span className=\"menu\">\n        <button\n          className=\"btn-default m-2 btn-block opt\"\n          onClick={this.props.startSearch}\n        >\n          START SEARCH\n        </button>\n        <form>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"set-squares\"\n                value=\"1\"\n                checked={this.props.activeOption === \"1\"}\n                onChange={(changeEvent) =>\n                  this.props.optionChange(changeEvent.target.value)\n                }\n                className=\"set-squares\"\n              />\n              Set Start\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"set-squares\"\n                value=\"2\"\n                checked={this.props.activeOption === \"2\"}\n                onChange={(changeEvent) =>\n                  this.props.optionChange(changeEvent.target.value)\n                }\n                className=\"set-squares\"\n              />\n              Set Destination\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"set-squares\"\n                value=\"3\"\n                checked={this.props.activeOption === \"3\"}\n                onChange={(changeEvent) =>\n                  this.props.optionChange(changeEvent.target.value)\n                }\n                className=\"set-squares\"\n              />\n              Set Obstacles\n            </label>\n          </div>\n        </form>\n\n        <button\n          className=\"btn-default m-2 btn-block opt\"\n          onClick={this.props.clrObs}\n        >\n          CLEAR OBSTACLES\n        </button>\n        <div>\n          <button\n            className=\"btn-default m-2 btn-block opt\"\n            onClick={this.props.rstBrd}\n          >\n            RESET BOARD\n          </button>\n        </div>\n      </span>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\r\n\r\nclass PathFind extends Component {\r\n  BFS = (sRow, sCol, Grid) => {\r\n    console.log(\"reached bfs\");\r\n    let tempGrid = Array(20)\r\n      .fill()\r\n      .map((_) => Array(20).fill(\"\"));\r\n\r\n    for (let j = 0; j < 20; j++) {\r\n      for (let k = 0; k < 20; k++) {\r\n        tempGrid[j][k] = {\r\n          r: j,\r\n          c: k,\r\n          val: Grid.val,\r\n          d: 0,\r\n          visited: false,\r\n        };\r\n      }\r\n    }\r\n    for (let j = 0; j < 20; j++) {\r\n      for (let k = 0; k < 20; k++) {\r\n        if (tempGrid[j][k].val === 3) {\r\n          tempGrid[j][k].visited = true;\r\n        }\r\n      }\r\n    }\r\n    var newList = [];\r\n    var start = tempGrid[sRow][sCol];\r\n    newList.push(start);\r\n    start.visited = true;\r\n    var node;\r\n\r\n    while (newList.length) {\r\n      node = newList.pop();\r\n\r\n      if (node.val === 2) {\r\n        return node.d;\r\n      }\r\n      //moving up\r\n      if (node.r - 1 >= 0 && tempGrid[node.r - 1][node.c].visited === false) {\r\n        tempGrid[node.r - 1][node.c].d = node.d + 1;\r\n        tempGrid[node.r - 1][node.c].visited = true;\r\n        newList.push(tempGrid[node.r - 1][node.c]);\r\n      }\r\n      //moving down\r\n      if (node.r + 1 < 20 && tempGrid[node.r + 1][node.c].visited === false) {\r\n        tempGrid[node.r + 1][node.c].d = node.d + 1;\r\n        tempGrid[node.r + 1][node.c].visited = true;\r\n        newList.push(tempGrid[node.r + 1][node.c]);\r\n      }\r\n      //moving left\r\n      if (node.c - 1 >= 0 && tempGrid[node.r][node.c - 1].visited === false) {\r\n        tempGrid[node.r][node.c - 1].d = node.d + 1;\r\n        tempGrid[node.r][node.c - 1].visited = true;\r\n        newList.push(tempGrid[node.r][node.c - 1]);\r\n      }\r\n      //moving right\r\n      if (node.c + 1 < 20 && tempGrid[node.r][node.c + 1].visited === false) {\r\n        tempGrid[node.r][node.c + 1].d = node.d + 1;\r\n        tempGrid[node.r][node.c + 1].visited = true;\r\n        newList.push(tempGrid[node.r][node.c + 1]);\r\n      }\r\n      return -1;\r\n    }\r\n  };\r\n}\r\n\r\nexport default PathFind;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}