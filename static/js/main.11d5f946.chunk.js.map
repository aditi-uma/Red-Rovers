{"version":3,"sources":["components/square.jsx","components/grid.jsx","components/menu.jsx","components/app.jsx","components/pathFind.jsx","serviceWorker.js","index.js"],"names":["Square","setStyle","square","style","val","className","this","props","onClick","gOnClick","row","col","Component","Grid","state","setGrid","map","r","c","aOnClick","Menu","startSearch","type","name","value","checked","activeOption","onChange","changeEvent","optionChange","target","diag","diagChange","clrObs","rstBrd","BFS","sRow","sCol","console","log","tempGrid","Array","fill","_","j","k","d","visited","node","newList","start","push","length","pop","initialGrid","App","diagSelected","selectedOption","startRow","startCol","endRow","endCol","currentGrid","handleOptionChange","setState","handleDiagChange","handleClearObs","handleResetBoard","handleClick","i","handleSearch","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.11d5f946.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Square extends Component {\n  render() {\n    return (\n      <button\n        className={this.setStyle(this.props.square)}\n        onClick={() => this.props.gOnClick(this.props.row, this.props.col)}\n      ></button>\n    );\n    console.log(this.props.row, this.props.col);\n  }\n  //0empty, 1start, 2end, 3obs\n  setStyle = (square) => {\n    let style = \"sq btn m-0 rounded-0 btn-\";\n    style +=\n      square.val === \"1\"\n        ? \"success\"\n        : square.val === \"2\"\n        ? \"danger\"\n        : square.val === \"0\"\n        ? \"light\"\n        : \"secondary\";\n    return style;\n  };\n}\n\nexport default Square;\n","import React, { Component } from \"react\";\nimport Square from \"./square\";\n\nclass Grid extends Component {\n  state = {};\n\n  render() {\n    return (\n      <span className=\"grid\">\n        {this.props.setGrid.map((row) => (\n          <div>\n            {row.map((square) => (\n              <Square\n                square={square}\n                row={square.r}\n                col={square.c}\n                gOnClick={this.props.aOnClick}\n              ></Square>\n            ))}\n          </div>\n        ))}\n      </span>\n    );\n  }\n}\n\nexport default Grid;\n","import React, { Component } from \"react\";\n\nclass Menu extends Component {\n  render() {\n    return (\n      <span className=\"menu\">\n        <button\n          className=\"btn-default m-2 btn-block opt\"\n          onClick={this.props.startSearch}\n        >\n          START SEARCH\n        </button>\n        <form>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"set-squares\"\n                value=\"1\"\n                checked={this.props.activeOption === \"1\"}\n                onChange={(changeEvent) =>\n                  this.props.optionChange(changeEvent.target.value)\n                }\n                className=\"set-squares\"\n              />\n              Set Start\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"set-squares\"\n                value=\"2\"\n                checked={this.props.activeOption === \"2\"}\n                onChange={(changeEvent) =>\n                  this.props.optionChange(changeEvent.target.value)\n                }\n                className=\"set-squares\"\n              />\n              Set Destination\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"set-squares\"\n                value=\"3\"\n                checked={this.props.activeOption === \"3\"}\n                onChange={(changeEvent) =>\n                  this.props.optionChange(changeEvent.target.value)\n                }\n                className=\"set-squares\"\n              />\n              Set Obstacles\n            </label>\n          </div>\n        </form>\n        <label>\n          <input\n            name=\"diag\"\n            type=\"checkbox\"\n            checked={this.props.diag}\n            onChange={(changeEvent) =>\n              this.props.diagChange(changeEvent.target.checked)\n            }\n          />\n          Allow Diagonal Paths\n        </label>\n\n        <button\n          className=\"btn-default m-2 btn-block opt\"\n          onClick={this.props.clrObs}\n        >\n          CLEAR OBSTACLES\n        </button>\n        <div>\n          <button\n            className=\"btn-default m-2 btn-block opt\"\n            onClick={this.props.rstBrd}\n          >\n            RESET BOARD\n          </button>\n        </div>\n      </span>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport Grid from \"./grid\";\nimport Menu from \"./menu\";\nimport BFS from \"./pathFind\";\nconst sR = 9;\nconst sC = 3;\nconst eR = 9;\nconst eC = 16;\n\nlet initialGrid = Array(20)\n  .fill()\n  .map((_) => Array(20).fill(\"\"));\n\nfor (let j = 0; j < 20; j++) {\n  for (let k = 0; k < 20; k++) {\n    initialGrid[j][k] = { r: j, c: k, val: \"0\" };\n  }\n}\n\ninitialGrid[sR][sC].val = \"1\";\ninitialGrid[eR][eC].val = \"2\";\n\nclass App extends Component {\n  state = {\n    diagSelected: false,\n    selectedOption: \"3\",\n    startRow: sR,\n    startCol: sC,\n    endRow: eR,\n    endCol: eC,\n    currentGrid: initialGrid,\n  };\n\n  handleOptionChange = (value) => {\n    this.setState({\n      selectedOption: value,\n    });\n  };\n  handleDiagChange = (value) => {\n    this.setState({\n      diagSelected: value,\n    });\n  };\n  handleClearObs = () => {\n    let tempGrid = Array(20)\n      .fill()\n      .map((_) => Array(20).fill(\"\"));\n\n    for (let j = 0; j < 20; j++) {\n      for (let k = 0; k < 20; k++) {\n        tempGrid[j][k] = { r: j, c: k, val: \"0\" };\n      }\n    }\n\n    tempGrid[this.state.startRow][this.state.startCol].val = \"1\";\n    tempGrid[this.state.endRow][this.state.endCol].val = \"2\";\n    this.setState({ currentGrid: tempGrid });\n\n    return;\n  };\n\n  handleResetBoard = () => {\n    let tempGrid = Array(20)\n      .fill()\n      .map((_) => Array(20).fill(\"\"));\n\n    for (let j = 0; j < 20; j++) {\n      for (let k = 0; k < 20; k++) {\n        tempGrid[j][k] = { r: j, c: k, val: \"0\" };\n      }\n    }\n    this.setState({ startRow: sR, startCol: sC, endRow: eR, endCol: eC });\n    tempGrid[sR][sC].val = \"1\";\n    tempGrid[eR][eC].val = \"2\";\n\n    this.setState({ currentGrid: tempGrid });\n\n    return;\n  };\n  handleClick = (row, col) => {\n    let tempGrid = this.state.currentGrid;\n    let i = this.state.selectedOption;\n    //setting start and end\n    if (i === \"1\" || i === \"2\") {\n      if (\n        (this.state.startRow === row && this.state.startCol === col) ||\n        (this.state.endRow === row && this.state.endCol === col)\n      ) {\n        return;\n      } else {\n      }\n      if (i === \"1\") {\n        tempGrid[this.state.startRow][this.state.startCol].val = \"0\";\n        tempGrid[row][col].val = \"1\";\n        this.setState({ startRow: row, startCol: col });\n      } else {\n        tempGrid[this.state.endRow][this.state.endCol].val = \"0\";\n        tempGrid[row][col].val = \"2\";\n        this.setState({ endRow: row, endCol: col });\n      }\n    }\n\n    //setting obstacles\n    else {\n      if (i === \"3\") {\n        if (\n          (this.state.startRow === row && this.state.startCol === col) ||\n          (this.state.endRow === row && this.state.endCol === col)\n        ) {\n          return;\n        } else {\n          tempGrid[row][col].val = tempGrid[row][col].val === \"0\" ? \"3\" : \"0\";\n        }\n      }\n    }\n\n    this.setState({ currentGrid: tempGrid });\n    return;\n  };\n  handleSearch = () => {\n    console.log(\"reached handle\");\n    BFS(\n      this.state.startRow,\n      this.state.startCol,\n      this.state.currentGrid,\n      this.state.diagSelected\n    );\n  };\n  render() {\n    return (\n      <div>\n        <Menu\n          optionChange={this.handleOptionChange}\n          activeOption={this.state.selectedOption}\n          clrObs={this.handleClearObs}\n          rstBrd={this.handleResetBoard}\n          startSearch={this.handleSearch}\n          diag={this.state.diagSelected}\n          diagChange={this.handleDiagChange}\n        />\n\n        <Grid setGrid={this.state.currentGrid} aOnClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","function BFS(sRow, sCol, Grid, diag) {\r\n  console.log(\"reached bfs\");\r\n  let tempGrid = Array(20)\r\n    .fill()\r\n    .map((_) => Array(20).fill(\"\"));\r\n\r\n  for (let j = 0; j < 20; j++) {\r\n    for (let k = 0; k < 20; k++) {\r\n      tempGrid[j][k] = {\r\n        r: j,\r\n        c: k,\r\n        val: Grid[j][k].val,\r\n        d: 0,\r\n        visited: false,\r\n      };\r\n    }\r\n  }\r\n  for (let j = 0; j < 20; j++) {\r\n    for (let k = 0; k < 20; k++) {\r\n      if (tempGrid[j][k].val === \"3\") {\r\n        tempGrid[j][k].visited = true;\r\n      }\r\n    }\r\n  }\r\n  var newList = [];\r\n  var start = tempGrid[sRow][sCol];\r\n  newList.push(start);\r\n  start.visited = true;\r\n  var node;\r\n\r\n  while (newList.length) {\r\n    node = newList.pop();\r\n    if (node.val === \"2\") {\r\n      console.log(\"found\");\r\n      console.log(node.d);\r\n      return node.d;\r\n    }\r\n    //top left\r\n    if (\r\n      node.r - 1 >= 0 &&\r\n      node.c - 1 >= 0 &&\r\n      tempGrid[node.r - 1][node.c - 1].visited === false\r\n    ) {\r\n      tempGrid[node.r - 1][node.c - 1].d = node.d + 1;\r\n      tempGrid[node.r - 1][node.c - 1].visited = true;\r\n      newList.push(tempGrid[node.r - 1][node.c - 1]);\r\n    }\r\n    //top right\r\n    if (\r\n      node.r - 1 >= 0 &&\r\n      node.c + 1 < 20 &&\r\n      tempGrid[node.r - 1][node.c + 1].visited === false\r\n    ) {\r\n      tempGrid[node.r - 1][node.c + 1].d = node.d + 1;\r\n      tempGrid[node.r - 1][node.c + 1].visited = true;\r\n      newList.push(tempGrid[node.r - 1][node.c + 1]);\r\n    }\r\n    //bottom left\r\n    if (\r\n      node.r + 1 < 20 &&\r\n      node.c - 1 >= 0 &&\r\n      tempGrid[node.r + 1][node.c - 1].visited === false\r\n    ) {\r\n      tempGrid[node.r + 1][node.c - 1].d = node.d + 1;\r\n      tempGrid[node.r + 1][node.c - 1].visited = true;\r\n      newList.push(tempGrid[node.r + 1][node.c - 1]);\r\n    }\r\n    //bottom right\r\n    if (\r\n      node.r + 1 < 20 &&\r\n      node.c + 1 < 20 &&\r\n      tempGrid[node.r + 1][node.c + 1].visited === false\r\n    ) {\r\n      tempGrid[node.r + 1][node.c + 1].d = node.d + 1;\r\n      tempGrid[node.r + 1][node.c + 1].visited = true;\r\n      newList.push(tempGrid[node.r + 1][node.c + 1]);\r\n    }\r\n    //moving up\r\n    if (node.r - 1 >= 0 && tempGrid[node.r - 1][node.c].visited === false) {\r\n      tempGrid[node.r - 1][node.c].d = node.d + 1;\r\n      tempGrid[node.r - 1][node.c].visited = true;\r\n      newList.push(tempGrid[node.r - 1][node.c]);\r\n    }\r\n    //moving down\r\n    if (node.r + 1 < 20 && tempGrid[node.r + 1][node.c].visited === false) {\r\n      tempGrid[node.r + 1][node.c].d = node.d + 1;\r\n      tempGrid[node.r + 1][node.c].visited = true;\r\n      newList.push(tempGrid[node.r + 1][node.c]);\r\n    }\r\n    //moving left\r\n    if (node.c - 1 >= 0 && tempGrid[node.r][node.c - 1].visited === false) {\r\n      tempGrid[node.r][node.c - 1].d = node.d + 1;\r\n      tempGrid[node.r][node.c - 1].visited = true;\r\n      newList.push(tempGrid[node.r][node.c - 1]);\r\n    }\r\n    //moving right\r\n    if (node.c + 1 < 20 && tempGrid[node.r][node.c + 1].visited === false) {\r\n      tempGrid[node.r][node.c + 1].d = node.d + 1;\r\n      tempGrid[node.r][node.c + 1].visited = true;\r\n      newList.push(tempGrid[node.r][node.c + 1]);\r\n    }\r\n  }\r\n}\r\nexport default BFS;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}